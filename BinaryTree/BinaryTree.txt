Binary Tree
============
- ex.    6
        / \
       5   3
      /   / \
     8   1   4

- Tree data structure where each node has at most 2 children
- Binary trees can be BALANCED or UNBALANCED meaning every node has exactly 2 children
- Can be implemented like a LL or with an Array

Properties:
- Nodes in a full BT is at least {2 * Height + 1} and at most {2^(Height + 1) - 1}
- # of leaf nodes in a perfect BT is (nodes + 1) / 2 

Variants:
- Binary Search Tree
	- Left child is always less than current node, right child always greater
	Efficiency:
		- Space: O(n)
		- Search: O(log(n)) to O(n)
		- Insert: O(log(n)) to O(n)
		- Delete: O(log(n)) to O(n)