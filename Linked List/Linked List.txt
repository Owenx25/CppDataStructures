Linked List
============
- A list of objects that are attached via pointers, they are not always continuous in memory
- ex. 2 -> 5 -> 7 -> 9 -> NULL

- Very good O(1) time for insertions/deletions
	- this is because pointers only need to be updated, no shifting
- Variants include singly linked, doubly linked, multiply linked, circular linked
- Access time is slow O(n) since the list had to be traversed, elements can't be accessed directly like an array
- Bad Cache locality(Memory locations all spread out)
- Don't have to define a size on init